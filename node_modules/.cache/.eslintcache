[{"/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/index.js":"1","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/reportWebVitals.js":"2","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/App.js":"3","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/PageTemplate.js":"4","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/TodoInput.js":"5","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/TodoItem.js":"6","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/TodoList.js":"7"},{"size":516,"mtime":1618250752268,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1618247613789,"results":"10","hashOfConfig":"9"},{"size":2054,"mtime":1618272616652,"results":"11","hashOfConfig":"9"},{"size":285,"mtime":1618251995299,"results":"12","hashOfConfig":"9"},{"size":428,"mtime":1618252261041,"results":"13","hashOfConfig":"9"},{"size":712,"mtime":1618352626775,"results":"14","hashOfConfig":"9"},{"size":688,"mtime":1618272541525,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"2egzt7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/index.js",[],["34","35"],"/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/reportWebVitals.js",[],"/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/App.js",["36","37"],"import React, {Component} from 'react';\nimport PageTemplate from './PageTemplate';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\n\nconst initialTodos = new Array().fill(0).map (\n    (foo, index) => ({id: index, text:`일정 ${index}`, done:false})\n);\n\nclass App extends Component {\n    state = {\n        input : '',\n        todos : initialTodos,\n    }\n    id=0\n    getId = () => {\n        return ++this.id;\n    }\n\n    handleChange = (e) => {\n        const{value} = e.target;\n        this.setState ({\n            input: value\n        });\n    }\n\n    handleInsert =() => {\n        const {todos, input} = this.state;\n        const newTodo = {\n            text: input,\n            done: false,\n            id: this.getId()\n        };\n        this.setState( {\n            todos: [...todos, newTodo],\n            input: ''\n        });\n    }\n\n      handleRemove =(id) => {\n        const {todos} = this.state;\n        const index = todos.findIndex(todo => todo.id === id);\n        this.setState ( {\n            todos : [\n                ...todos.slice(0, index),\n                ...todos.slice(index+1, todos.length)\n            ]\n        });\n    }\n\n    handleToggle = (id) => {\n        const {todos} = this.state;\n        const index = todos.findIndex(todo => todo.id === id);\n        const toggled = {\n            ...todos[index],\n            done: !todos[index].done\n        };\n    this.setState ({\n        todos: [\n            ...todos.slice(0, index),\n            toggled,\n            ...todos.slice(index+1, todos.length)\n        ]\n    });\n  }\n\n\n    render() {\n        const {key, input, todos} = this.state;\n        const {\n            handleChange, \n            handleInsert,\n            handleToggle, \n            handleRemove\n        } = this;\n\n        return (\n            <PageTemplate>\n            <TodoInput onChange={handleChange} onInsert={handleInsert} value={input}/>\n            <TodoList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\n            </PageTemplate>\n        );\n    }\n}\nexport default App;","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/PageTemplate.js",[],"/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/TodoInput.js",[],"/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/TodoItem.js",["38","39"],"import React, {Component} from 'react';\nimport classNames from 'classnames/bind';\n\n\nclass TodoItem extends Component {\n\n    render ( ) {\n            const {key, done, children, onToggle, onRemove} = this.props;\n            return (\n                <div className='todo-item' onClick={onToggle}>\n                    <input className='tick' type='checkbox' checked={done} readOnly/>\n                    <div className='text'>{children}</div>\n                    <div className='delete' onClick= {(e) => {\n                        onRemove();\n                        e.stopPropagation();\n                    }\n                }>Delete\n                </div>\n                </div>);\n    }\n}\n\nexport default TodoItem;","/Users/rosakang/Documents/labs/dashcoding/day15/ridi-todolist/src/components/TodoList.js",["40"],"import React, {Component} from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends Component {\n\n    render() {\n        const {key, todos, onToggle, onRemove} = this.props;\n        const todoList = todos.map(\n            todo => (\n                <TodoItem\n                 Key= {todo.id}\n                 done = {todo.done}\n                 onToggle= {() => onToggle(todo.id)}\n                 onRemove = {() => onRemove(todo.id)}\n                 >\n                 {todo.text}\n                 </TodoItem>                \n            )\n        )\n        return (\n            <div>\n                {todoList}\n            </div>\n        )\n    }\n}\n\nexport default TodoList;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":6,"column":22,"nodeType":"47","messageId":"48","endLine":6,"endColumn":33},{"ruleId":"49","severity":1,"message":"50","line":69,"column":16,"nodeType":"51","messageId":"52","endLine":69,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":18},{"ruleId":"49","severity":1,"message":"50","line":8,"column":20,"nodeType":"51","messageId":"52","endLine":8,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":7,"column":16,"nodeType":"51","messageId":"52","endLine":7,"endColumn":19},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","'classNames' is defined but never used.","no-global-assign","no-unsafe-negation"]